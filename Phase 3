from flask import Flask, render_template, request, redirect, url_for
from models import db, JobApplication
from datetime import datetime

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///applications.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db.init_app(app)

# Home/Dashboard
@app.route('/')
def dashboard():
    applications = JobApplication.query.all()
    return render_template('dashboard.html', applications=applications)

# Add Job Application
@app.route('/add', methods=['GET', 'POST'])
def add_application():
    if request.method == 'POST':
        new_app = JobApplication(
            company=request.form['company'],
            role=request.form['role'],
            platform=request.form['platform'],
            date_applied=datetime.strptime(request.form['date_applied'], "%Y-%m-%d"),
            deadline=datetime.strptime(request.form['deadline'], "%Y-%m-%d"),
            stage=request.form['stage'],
            notes=request.form['notes']
        )
        db.session.add(new_app)
        db.session.commit()
        return redirect(url_for('dashboard'))
    return render_template('add.html')

# Update Job Application
@app.route('/update/<int:id>', methods=['GET', 'POST'])
def update_application(id):
    app_data = JobApplication.query.get(id)
    if request.method == 'POST':
        app_data.company = request.form['company']
        app_data.role = request.form['role']
        app_data.platform = request.form['platform']
        app_data.date_applied = datetime.strptime(request.form['date_applied'], "%Y-%m-%d")
        app_data.deadline = datetime.strptime(request.form['deadline'], "%Y-%m-%d")
        app_data.stage = request.form['stage']
        app_data.notes = request.form['notes']
        db.session.commit()
        return redirect(url_for('dashboard'))
    return render_template('add.html', app=app_data)

# Delete Job Application
@app.route('/delete/<int:id>')
def delete_application(id):
    app_data = JobApplication.query.get(id)
    db.session.delete(app_data)
    db.session.commit()
    return redirect(url_for('dashboard'))

if __name__ == "__main__":
    with app.app_context():
        db.create_all()
    app.run(debug=True)
